// <auto-generated />
using System;
using LoanAppraisalApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LoanAppraisalApi.Migrations
{
    [DbContext(typeof(LoanAppraisalContext))]
    partial class LoanAppraisalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LoanAppraisalApi.Models.Inspection", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusinessRegNo");

                    b.Property<double?>("GPSLAT");

                    b.Property<double?>("GPSLONG");

                    b.Property<string>("Image");

                    b.Property<string>("Image_");

                    b.Property<string>("LoaneeAccountNo");

                    b.Property<int>("UserId");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("inspections");
                });

            modelBuilder.Entity("LoanAppraisalApi.Models.LoanAppraisalDetails", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress");

                    b.Property<string>("BusinessRegNo");

                    b.Property<string>("City");

                    b.Property<double?>("CurrentGPSLAT");

                    b.Property<double?>("CurrentGPSLONG");

                    b.Property<string>("ImageOne");

                    b.Property<string>("ImageTwo");

                    b.Property<double>("LoanAmount");

                    b.Property<string>("LoaneeAccount");

                    b.Property<string>("LoaneeFirstName");

                    b.Property<string>("LoaneeIdNo");

                    b.Property<string>("LoaneeeLastName");

                    b.Property<int>("UserId");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("loanAppraisalDetails");
                });

            modelBuilder.Entity("LoanAppraisalApi.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Cellphone")
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmployeeIDNO")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("LastLoginTime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("LoginTime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(600)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("UserId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("LoanAppraisalApi.Models.Inspection", b =>
                {
                    b.HasOne("LoanAppraisalApi.Models.Users", "Users")
                        .WithMany("Inspections")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("LoanAppraisalApi.Models.LoanAppraisalDetails", b =>
                {
                    b.HasOne("LoanAppraisalApi.Models.Users", "Users")
                        .WithMany("loanAppraisalDetails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
